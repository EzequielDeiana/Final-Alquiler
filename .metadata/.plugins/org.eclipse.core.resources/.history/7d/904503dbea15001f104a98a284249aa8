package negocio;

import java.time.LocalDate;
import java.util.List;

import dao.AlquilerDAO;
import datos.Alquiler;

public class AlquilerABM {
	public static AlquilerABM instance;
	
	private AlquilerABM() {}
	
	public static AlquilerABM getInstance() {
		if(instance == null) {
			instance = new AlquilerABM();
		}
		return instance;
	}
	
	public int agregar(Alquiler alquiler) {
		return AlquilerDAO.getInstance().agregar(alquiler);
	}
	
	public void modificar(Alquiler alquiler) {
		AlquilerDAO.getInstance().actualizar(alquiler);
	}
	
	public void eliminar(Alquiler alquiler) {
		AlquilerDAO.getInstance().eliminar(alquiler);
	}
	
	public void traer(int idAlquiler) {
		AlquilerDAO.getInstance().traer(idAlquiler);
	}
	
	public double calcularPrecioFinal(Alquiler alquiler) {
		return alquiler.precioFinal();
	}
	
	public double calcularPrecioFinal(LocalDate desde, LocalDate hasta) {
		double precio = 0;
		
		List<Alquiler> lista = AlquilerDAO.getInstance().traerAlquiler();
		
		for (Alquiler alquiler : lista) {
			if((alquiler.getFechaDesde().equals(desde) || alquiler.getFechaDesde().isAfter(desde))
					&& (alquiler.getFechaHasta().isBefore(hasta) || alquiler.getFechaHasta().equals(hasta))) {
				precio = precio + calcularPrecioFinal(alquiler);
			}
		}
		return precio;
	}
	
}
